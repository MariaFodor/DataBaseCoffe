
import java.awt.Color;
import static java.awt.Color.white;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.List;
import java.beans.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Maria
 */
public class JFrame extends javax.swing.JFrame {

 
    /**
     * Creates new form JFrame
     */
    Color defaultcolor, clikedcolor, black;
    Connection con;
    PreparedStatement st;//statement
    int items_before_edit;//memoreaza cate elemente erau in tabela inainte de editare
    Hashtable<Integer,Integer> row_quant_edit = new Hashtable();//memoreaza liniile si cantiatile adaugate pe fiecare linie
    public JFrame() {
        initComponents();
        table_update();
        table_update2();
        table_update_meniu();
        table_update_ingredient();
        table_update_receipts();
        table_update_comanda();
        defaultcolor = new Color(153,153,255);
        clikedcolor = new Color(51,51,51);
        black = new Color(0,0,0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private int check_and_fix_distinct(String new_item,int nr)//metoda care verifica conditia de integritate in item_receipt
    {//daca da adauga doar numarul
     //returneaza nr adaugat
        DefaultTableModel Df = (DefaultTableModel)RComanda.getModel();
        int rows = Df.getRowCount();//numarul de linii
        int linia = -1;
        for(int i = 0;i < rows;i++)
        {
            if ( Df.getValueAt(i, 0).equals(new_item))
            {
                linia = i;
                int val = (int)Double.parseDouble(Df.getValueAt(i, 1).toString()) + nr;
                Df.setValueAt(Integer.toString(val) , i, 1);
            }
        }
        return linia;
    }//pt update ne folosim de nr
    
    
    
    private void table_update2()//metoda pt afisare pe tabela ingredients
    {//aici trebuie setate si valorile din jComboIngredient
        int c;
         try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
        String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
        String user = "bd085";
        String password = "bd085";
        con = DriverManager.getConnection(url, user, password);
        st = con.prepareStatement("SELECT ingredient_id,nume,available_quantity, expiration_date"
                + " FROM INGREDIENT"
                + " ORDER BY ingredient_id");
        ResultSet rs = st.executeQuery();
        ResultSetMetaData Rss = rs.getMetaData();
        c = Rss.getColumnCount();
        
        DefaultTableModel Df = (DefaultTableModel)IngredientsTable.getModel();
        Df.setRowCount(0);
        while(rs.next())
        {
            Vector v2 = new Vector();
            for(int i = 1;i <= c;i++)
            {
                v2.add(rs.getString("ingredient_id"));
                v2.add(rs.getString("nume"));
                v2.add(rs.getString("available_quantity"));
                v2.add(rs.getString("expiration_date").substring(0,10));
            }
            Df.addRow(v2);
            String str = rs.getString("nume");
            String  comp;
            boolean add = true;
            for(int i=0; i < jComboIngredient.getItemCount();i++)
            {
                comp = jComboIngredient.getItemAt(i);
                if(comp.equals(str))
                {
                    add = false;
                }
            }
            if(add){
                jComboIngredient.addItem(rs.getString("nume"));//adaug in ingrediente de selectat
            }
        } con.close();
}catch (Exception e){System.out.println(e);}
}
     
   private void table_update()//metoda pt afisare pe tabela books
    {
        int c;
         try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
        String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
        String user = "bd085";
        String password = "bd085";
        con = DriverManager.getConnection(url, user, password);
        st = con.prepareStatement("SELECT b.book_id, d.title, d.author, d.genre, b.Number_available \n" +
        "FROM book b, book_details d\n" +
        "WHERE b.book_details_id = d.book_details_id"
        + " ORDER BY d.Title, d.author");//ordonate alfabetic
        ResultSet rs = st.executeQuery();
        ResultSetMetaData Rss = rs.getMetaData();
        c = Rss.getColumnCount();
        
        DefaultTableModel Df = (DefaultTableModel)BooksTable.getModel();
        Df.setRowCount(0);
        while(rs.next())
        {
            Vector v2 = new Vector();
            for(int i = 1;i <= c;i++)
            {
                v2.add(rs.getString("book_id"));
                v2.add(rs.getString("title"));
                v2.add(rs.getString("author"));
                v2.add(rs.getString("genre"));
                v2.add(rs.getString("number_available"));
            }
            Df.addRow(v2);
            String str = rs.getString("book_id");
            String  comp;
            boolean add = true;
            for(int i=0; i < RBook.getItemCount();i++)
            {
                comp = RBook.getItemAt(i);
                if(comp.equals(str))
                {
                    add = false;
                }
            }
            if(add){
                RBook.addItem(rs.getString("book_id"));//adaug in ingrediente de selectat
            }
        } con.close();
}catch (Exception e){System.out.println(e);}
}
   private void table_update_meniu()//metoda pt iteme meniu
   {
        int c;
         try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
        String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
        String user = "bd085";
        String password = "bd085";
        con = DriverManager.getConnection(url, user, password);
        st = con.prepareStatement("SELECT item_id,name, Price"
                + " FROM ITEM_MENIU ORDER BY item_id");
        ResultSet rs = st.executeQuery();
        ResultSetMetaData Rss = rs.getMetaData();
        c = Rss.getColumnCount();
        
        DefaultTableModel Df = (DefaultTableModel)MenuTable.getModel();
        Df.setRowCount(0);
        while(rs.next())
        {
            Vector v2 = new Vector();
            for(int i = 1;i <= c;i++)
            {
                v2.add(rs.getString("item_id"));
                v2.add(rs.getString("name"));
                v2.add(rs.getString("Price"));
            }
            Df.addRow(v2);
            //RECEIPT
            String str = rs.getString("name");
            String  comp;
            boolean add = true;
            for(int i=0; i < jComboItem.getItemCount();i++)
            {
                comp = jComboItem.getItemAt(i);
                if(comp.equals(str))
                {
                    add = false;
                }
            }
            if(add){
                jComboItem.addItem(rs.getString("name"));//adaug in meiul de selectat pt bon
            }
        } con.close();
}catch (Exception e){System.out.println(e);}
}
   
private void table_update_ingredient()//metoda pt ingredientele selectate
   {
        int c;
        if(MenuTable.getSelectedRow() != -1){
           
         try{
            DefaultTableModel Df = (DefaultTableModel)MenuTable.getModel();
            int selectedIndex = MenuTable.getSelectedRow();
            String item_name = (Df.getValueAt(selectedIndex, 1).toString());
            Class.forName("oracle.jdbc.driver.OracleDriver");
        String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
        String user = "bd085";
        String password = "bd085";
        con = DriverManager.getConnection(url, user, password);
        st = con.prepareStatement("SELECT  ing.NUME , i.INGREDIENT_QUANTITY\n" +
"    FROM INGREDIENT ing, ITEM_MENIU im, ITEM_INGREDIENT i\n" +
"    WHERE ing.INGREDIENT_ID = i.INGREDIENT_ID AND im.ITEM_ID = i.ITEM_ID AND im.NAME = ?");
        st.setString(1, item_name);
        ResultSet rs = st.executeQuery();
        ResultSetMetaData Rss = rs.getMetaData();
        c = Rss.getColumnCount();
        System.out.println(c);
        
        
        Df = (DefaultTableModel)IngredientTable.getModel();
        Df.setRowCount(0);
        while(rs.next())
        {
            Vector v2 = new Vector();
            for(int i = 1;i <= c;i++)
            {
                v2.add(rs.getString("Nume"));
                v2.add(rs.getString("INGREDIENT_QUANTITY"));
            }
            Df.addRow(v2);
            /*//COMPLETAM RECEIPT
            String str = rs.getString("name");
            String  comp;
            boolean add = true;
            for(int i=0; i < jComboIngredient.getItemCount();i++)
            {
                comp = jComboIngredient.getItemAt(i);
                if(comp.equals(str))
                {
                    add = false;
                }
            }
            if(add){
                jComboIngredient.addItem(rs.getString("nume"));//adaug in ingrediente de selectat
            }*/
        } con.close();
}catch (Exception e){System.out.println(e);}
}  
}


private void table_update_receipts()//umple tabela receipt
   {
        int c;
       try{
            DefaultTableModel Df = (DefaultTableModel)ReceiptTable.getModel();
            Class.forName("oracle.jdbc.driver.OracleDriver");
        String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
        String user = "bd085";
        String password = "bd085";
        con = DriverManager.getConnection(url, user, password);
        st = con.prepareStatement("SELECT i.receipt_id, sum(i.price * i.quantity) TOTAL\n" +
"   	 FROM\n" +
"    	(SELECT   r.receipt_id, im.ITEM_ID, im.PRICE, r.quantity\n" +
"         		FROM ITEM_MENIU im, ITEM_RECEIPT r\n" +
"         		WHERE im.ITEM_ID = r.ITEM_ID\n" +
"       		ORDER BY RECEIPt_id)    i\n" +
"     	GROUP BY (receipt_id)"
                + " ORDER BY RECEIPt_id");
        ResultSet rs1 = st.executeQuery();
        //avem acum nevoie de inca o interogare pentru a afla data si daca este platiti
        st = con.prepareStatement("SELECT receipt_id, receipt_date, pay_status from RECEIPT ORDER BY RECEIPt_id");
        ResultSet rs2 = st.executeQuery();
        ResultSetMetaData Rss1 = rs1.getMetaData();
        c = Rss1.getColumnCount();//c este acelasi
        System.out.println("Avem nr bonur:"+c);
        
        
        Df = (DefaultTableModel)ReceiptTable.getModel();
        Df.setRowCount(0);
        while(rs1.next() && rs2.next())
        {
            Vector v2 = new Vector();
            for(int i = 1;i <= c;i++)
            {
                v2.add(rs1.getString("receipt_id"));
                v2.add((rs2.getString("receipt_date")).substring(0,10));
                v2.add(rs1.getString("TOTAL"));
                v2.add(rs2.getString("pay_status"));
            }
            Df.addRow(v2);
        } con.close();
}catch (Exception e){System.out.println(e);} 
}
   
private void table_update_comanda()//umple tabela comanda
   {
        int c;
        if(ReceiptTable.getSelectedRow() != -1){//doar daca avem un item selectat
           
         try{
            DefaultTableModel Df = (DefaultTableModel)ReceiptTable.getModel();
            int selectedIndex = ReceiptTable.getSelectedRow();
            String id_receipt = (Df.getValueAt(selectedIndex, 0).toString());
            Class.forName("oracle.jdbc.driver.OracleDriver");
        String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
        String user = "bd085";
        String password = "bd085";
        con = DriverManager.getConnection(url, user, password);
        st = con.prepareStatement("SELECT i.NAME, ir.QUANTITY,  ir.QUANTITY * i.PRICE AS PRICE\n" +
"    FROM ITEM_MENIU i, ITEM_RECEIPT ir, RECEIPT r \n" +
"    WHERE i.ITEM_ID = ir.ITEM_ID AND ir.RECEIPT_ID = r.RECEIPT_ID \n" +
"    AND  r.RECEIPT_ID = ?");
        st.setString(1, id_receipt);
        ResultSet rs = st.executeQuery();
        ResultSetMetaData Rss = rs.getMetaData();
        c = Rss.getColumnCount();
        System.out.println(c);
        
        
        Df = (DefaultTableModel)RComanda.getModel();
        Df.setRowCount(0);
        while(rs.next())
        {
            Vector v2 = new Vector();
            for(int i = 1;i <= c;i++)
            {
                v2.add(rs.getString("name"));
                v2.add(rs.getString("QUANTITY"));
                v2.add(rs.getString("price"));
            }
            Df.addRow(v2);
        } con.close();
}catch (Exception e){System.out.println(e);}
}  
}




    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        p_inventory = new javax.swing.JPanel();
        m22 = new javax.swing.JLabel();
        p_book = new javax.swing.JPanel();
        m11 = new javax.swing.JLabel();
        p_receipt = new javax.swing.JPanel();
        m33 = new javax.swing.JLabel();
        p_menu = new javax.swing.JPanel();
        m44 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        JBooks = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        BookRegister = new javax.swing.JPanel();
        jTitle = new javax.swing.JTextField();
        jAuthor = new javax.swing.JTextField();
        jGenre = new javax.swing.JTextField();
        jNumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jAddBook = new javax.swing.JButton();
        jEditBook = new javax.swing.JButton();
        jDeleteBook = new javax.swing.JButton();
        JClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        BooksTable = new javax.swing.JTable();
        Total_books = new javax.swing.JButton();
        JIngredients = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        JIngredient = new javax.swing.JTextField();
        JExp = new javax.swing.JTextField();
        JInQuant = new javax.swing.JTextField();
        AddIngredient = new javax.swing.JButton();
        DelIng = new javax.swing.JButton();
        EditIng = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        IngredientsTable = new javax.swing.JTable();
        JReceipt = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        RNo = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        RDate = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        RTotal = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        RComanda = new javax.swing.JTable();
        RBook = new javax.swing.JComboBox<>();
        MakeNew = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jComboItem = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        RBuc = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jIMAdd = new javax.swing.JButton();
        AddNewReceipt = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        ReceiptTable = new javax.swing.JTable();
        MarkPayed = new javax.swing.JButton();
        EditReceipt = new javax.swing.JButton();
        ModifyReceipt = new javax.swing.JButton();
        JMenu = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        MenuTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        IngredientTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        RemoveIngFromItem = new javax.swing.JButton();
        AddIngToItem = new javax.swing.JButton();
        jComboIngredient = new javax.swing.JComboBox<>();
        ing_item_quant = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        ItemName = new javax.swing.JTextField();
        ItemPrice = new javax.swing.JTextField();
        AddMenuItem = new javax.swing.JButton();
        EditMenuItem = new javax.swing.JButton();
        DeleteMenuItem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 880, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 60));

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        p_inventory.setBackground(new java.awt.Color(153, 153, 255));
        p_inventory.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        m22.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        m22.setText("Inventory");
        m22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m22MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                m22MousePressed(evt);
            }
        });

        javax.swing.GroupLayout p_inventoryLayout = new javax.swing.GroupLayout(p_inventory);
        p_inventory.setLayout(p_inventoryLayout);
        p_inventoryLayout.setHorizontalGroup(
            p_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_inventoryLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(m22)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        p_inventoryLayout.setVerticalGroup(
            p_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_inventoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(m22, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addContainerGap())
        );

        p_book.setBackground(new java.awt.Color(153, 153, 255));

        m11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        m11.setText("Books");
        m11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m11MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                m11MousePressed(evt);
            }
        });

        javax.swing.GroupLayout p_bookLayout = new javax.swing.GroupLayout(p_book);
        p_book.setLayout(p_bookLayout);
        p_bookLayout.setHorizontalGroup(
            p_bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_bookLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(m11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        p_bookLayout.setVerticalGroup(
            p_bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_bookLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(m11)
                .addGap(15, 15, 15))
        );

        p_receipt.setBackground(new java.awt.Color(153, 153, 255));
        p_receipt.setForeground(new java.awt.Color(153, 153, 255));

        m33.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        m33.setText("Receipt");
        m33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m33MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                m33MousePressed(evt);
            }
        });

        javax.swing.GroupLayout p_receiptLayout = new javax.swing.GroupLayout(p_receipt);
        p_receipt.setLayout(p_receiptLayout);
        p_receiptLayout.setHorizontalGroup(
            p_receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_receiptLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(m33)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        p_receiptLayout.setVerticalGroup(
            p_receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_receiptLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(m33, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        p_menu.setBackground(new java.awt.Color(153, 153, 255));
        p_menu.setForeground(new java.awt.Color(153, 153, 255));

        m44.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        m44.setText("Menu");
        m44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m44MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                m44MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                m44MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout p_menuLayout = new javax.swing.GroupLayout(p_menu);
        p_menu.setLayout(p_menuLayout);
        p_menuLayout.setHorizontalGroup(
            p_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_menuLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(m44)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        p_menuLayout.setVerticalGroup(
            p_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_menuLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(m44)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(p_inventory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(p_receipt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(p_book, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(p_menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(p_book, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(p_inventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(p_receipt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(p_menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 200, 390));

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(204, 204, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("BOOKS");

        BookRegister.setBackground(new java.awt.Color(204, 204, 255));
        BookRegister.setBorder(javax.swing.BorderFactory.createTitledBorder("Book Register"));

        jTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTitleActionPerformed(evt);
            }
        });

        jNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNumberActionPerformed(evt);
            }
        });

        jLabel1.setText("Title");

        jLabel2.setText("Author");

        jLabel3.setText("Genre");

        jLabel7.setText("Available");

        jAddBook.setText("Add");
        jAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddBookActionPerformed(evt);
            }
        });

        jEditBook.setText("Edit");
        jEditBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jEditBookMouseClicked(evt);
            }
        });
        jEditBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEditBookActionPerformed(evt);
            }
        });

        jDeleteBook.setText("Delete");
        jDeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteBookActionPerformed(evt);
            }
        });

        JClear.setText("Clear");
        JClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JClearMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout BookRegisterLayout = new javax.swing.GroupLayout(BookRegister);
        BookRegister.setLayout(BookRegisterLayout);
        BookRegisterLayout.setHorizontalGroup(
            BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookRegisterLayout.createSequentialGroup()
                        .addComponent(jAddBook, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jEditBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jDeleteBook))
                    .addGroup(BookRegisterLayout.createSequentialGroup()
                        .addGroup(BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(BookRegisterLayout.createSequentialGroup()
                                .addGroup(BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(46, 46, 46))
                            .addGroup(BookRegisterLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(33, 33, 33)))
                        .addGroup(BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTitle)
                            .addComponent(jAuthor)
                            .addComponent(jGenre)
                            .addComponent(jNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(BookRegisterLayout.createSequentialGroup()
                .addComponent(JClear)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        BookRegisterLayout.setVerticalGroup(
            BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JClear)
                .addGap(1, 1, 1)
                .addGroup(BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BookRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAddBook)
                    .addComponent(jEditBook)
                    .addComponent(jDeleteBook))
                .addContainerGap())
        );

        BooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Title", "Author", "Genre", "Available"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BooksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BooksTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BooksTable);

        Total_books.setText("Total Number");
        Total_books.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Total_booksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BookRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Total_books, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(jLabel4)
                .addContainerGap(372, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(38, 38, 38)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BookRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Total_books)))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout JBooksLayout = new javax.swing.GroupLayout(JBooks);
        JBooks.setLayout(JBooksLayout);
        JBooksLayout.setHorizontalGroup(
            JBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        JBooksLayout.setVerticalGroup(
            JBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab1", JBooks);

        jPanel11.setBackground(new java.awt.Color(204, 153, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Ingredients");

        jPanel4.setBackground(new java.awt.Color(204, 153, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingredient Register"));
        jPanel4.setForeground(new java.awt.Color(204, 153, 255));

        jLabel8.setText("Ingredient");

        jLabel11.setText("Exp. Date");

        jLabel12.setText("Quantity");

        JExp.setText("YYYY-MM-DD");
        JExp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JExpActionPerformed(evt);
            }
        });

        AddIngredient.setText("Add");
        AddIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddIngredientActionPerformed(evt);
            }
        });

        DelIng.setText("Delete");
        DelIng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelIngActionPerformed(evt);
            }
        });

        EditIng.setText("Edit");
        EditIng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditIngActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddIngredient))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(EditIng)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DelIng))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(JIngredient)
                                .addComponent(JExp, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                .addComponent(JInQuant)))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(JIngredient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(JExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(JInQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddIngredient)
                    .addComponent(DelIng)
                    .addComponent(EditIng))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        IngredientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ingredient", "Quantity", "Exp. Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        IngredientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IngredientsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(IngredientsTable);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout JIngredientsLayout = new javax.swing.GroupLayout(JIngredients);
        JIngredients.setLayout(JIngredientsLayout);
        JIngredientsLayout.setHorizontalGroup(
            JIngredientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        JIngredientsLayout.setVerticalGroup(
            JIngredientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab2", JIngredients);

        jPanel12.setBackground(new java.awt.Color(204, 204, 0));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Receipt");

        jPanel6.setBackground(new java.awt.Color(204, 204, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel17.setText("Receipt No. :");

        RNo.setEditable(false);
        RNo.setBackground(new java.awt.Color(204, 204, 0));
        RNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RNoActionPerformed(evt);
            }
        });

        jLabel19.setText("Date:");

        RDate.setEditable(false);
        RDate.setBackground(new java.awt.Color(204, 204, 0));
        RDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RDateActionPerformed(evt);
            }
        });

        jLabel20.setText("Book ID:");

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setText("Total:");

        RTotal.setEditable(false);
        RTotal.setBackground(new java.awt.Color(204, 204, 0));

        RComanda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Number", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(RComanda);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RNo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RDate, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RBook, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(RNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(RDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(RBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(RTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        MakeNew.setBackground(new java.awt.Color(153, 153, 0));
        MakeNew.setText("Make New");
        MakeNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MakeNewActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(204, 204, 0));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Insert Items"));

        jComboItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboItemActionPerformed(evt);
            }
        });

        jLabel23.setText("           Item");

        RBuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBucActionPerformed(evt);
            }
        });

        jLabel24.setText("No.");

        jIMAdd.setText("Add");
        jIMAdd.setEnabled(false);
        jIMAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIMAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jComboItem, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RBuc, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jIMAdd))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RBuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIMAdd))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AddNewReceipt.setBackground(new java.awt.Color(153, 153, 0));
        AddNewReceipt.setText("Add New");
        AddNewReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewReceiptActionPerformed(evt);
            }
        });

        ReceiptTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Date", "Total", "Pay Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ReceiptTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReceiptTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(ReceiptTable);

        MarkPayed.setText("Mark as paid");
        MarkPayed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarkPayedActionPerformed(evt);
            }
        });

        EditReceipt.setText("Edit");
        EditReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditReceiptActionPerformed(evt);
            }
        });

        ModifyReceipt.setText("Modify");
        ModifyReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyReceiptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel6))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(MarkPayed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(EditReceipt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ModifyReceipt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(MakeNew, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddNewReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(MarkPayed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EditReceipt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ModifyReceipt)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddNewReceipt)
                            .addComponent(MakeNew))
                        .addContainerGap(56, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout JReceiptLayout = new javax.swing.GroupLayout(JReceipt);
        JReceipt.setLayout(JReceiptLayout);
        JReceiptLayout.setHorizontalGroup(
            JReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JReceiptLayout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        JReceiptLayout.setVerticalGroup(
            JReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JReceiptLayout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab3", JReceipt);

        jPanel7.setBackground(new java.awt.Color(255, 204, 204));
        jPanel7.setForeground(new java.awt.Color(255, 204, 204));

        MenuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Menu Item", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MenuTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(MenuTable);

        IngredientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ingredient", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        IngredientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IngredientTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(IngredientTable);

        jPanel5.setBackground(new java.awt.Color(255, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu Register"));

        jLabel13.setText("Item Name ");

        jLabel14.setText("Item Price");

        jLabel15.setText("Ingredients");

        RemoveIngFromItem.setText("Remove");
        RemoveIngFromItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveIngFromItemActionPerformed(evt);
            }
        });

        AddIngToItem.setText("Add");
        AddIngToItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddIngToItemActionPerformed(evt);
            }
        });

        ing_item_quant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ing_item_quantActionPerformed(evt);
            }
        });

        jLabel16.setText("Quantity:");

        AddMenuItem.setText("Add ");
        AddMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMenuItemActionPerformed(evt);
            }
        });

        EditMenuItem.setText("Edit");
        EditMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditMenuItemActionPerformed(evt);
            }
        });

        DeleteMenuItem.setText("Delete");
        DeleteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteMenuItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(AddIngToItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RemoveIngFromItem)
                .addGap(31, 31, 31))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel15))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboIngredient, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ing_item_quant, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(AddMenuItem)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(EditMenuItem, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(DeleteMenuItem, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13)
                                .addComponent(jLabel14))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ItemName, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                .addComponent(ItemPrice)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(ItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddMenuItem)
                    .addComponent(EditMenuItem)
                    .addComponent(DeleteMenuItem))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboIngredient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(ing_item_quant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RemoveIngFromItem)
                    .addComponent(AddIngToItem))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 64, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout JMenuLayout = new javax.swing.GroupLayout(JMenu);
        JMenu.setLayout(JMenuLayout);
        JMenuLayout.setHorizontalGroup(
            JMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        JMenuLayout.setVerticalGroup(
            JMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab4", JMenu);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 680, 410));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTabbedPane1MouseClicked
//meniu selection 
    private void m11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m11MouseClicked
        // TODO add your handling code here:
        //click pe BOOKS
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_m11MouseClicked

    private void m22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m22MouseClicked
        // TODO add your handling code here:
         jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_m22MouseClicked

    private void m33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m33MouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_m33MouseClicked

    private void m11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m11MousePressed
        // TODO add your handling code here:
        p_book.setBackground(clikedcolor);
        p_inventory.setBackground(defaultcolor);
        p_receipt.setBackground(defaultcolor);
        m11.setForeground(white);
        m22.setForeground(black);
        m33.setForeground(black);
        p_menu.setBackground(defaultcolor);
        m44.setForeground(black);
    }//GEN-LAST:event_m11MousePressed

    private void m22MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m22MousePressed
        p_book.setBackground(defaultcolor);
        p_inventory.setBackground(clikedcolor);
        p_receipt.setBackground(defaultcolor);
        m22.setForeground(white);
        m11.setForeground(black);
        m33.setForeground(black);
        p_menu.setBackground(defaultcolor);
        m44.setForeground(black);
    }//GEN-LAST:event_m22MousePressed

    private void m33MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m33MousePressed
        // TODO add your handling code here:
        p_book.setBackground(defaultcolor);
        p_inventory.setBackground(defaultcolor);
        p_receipt.setBackground(clikedcolor);
        m33.setForeground(white);
        m22.setForeground(black);
        m11.setForeground(black);
        p_menu.setBackground(defaultcolor);
        m44.setForeground(black);
    }//GEN-LAST:event_m33MousePressed

    private void BooksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BooksTableMouseClicked
        // TODO add your handling code here:
        //selectare item din tabela
        DefaultTableModel Df = (DefaultTableModel)BooksTable.getModel();
        int selectedIndex = BooksTable.getSelectedRow();
        jTitle.setText(Df.getValueAt(selectedIndex, 1).toString());
        jAuthor.setText(Df.getValueAt(selectedIndex, 2).toString());
        jGenre.setText(Df.getValueAt(selectedIndex, 3).toString());
        //ultima valoare o iau caluland printr-un select numarul total de exemplare
        jNumber.setText(Df.getValueAt(selectedIndex, 4).toString());
        //setam needitabil titlul autorul etc
        jTitle.setEditable(false);
        jAuthor.setEditable(false);
        jGenre.setEditable(false);
        //sigurul editabil e numarul
    }//GEN-LAST:event_BooksTableMouseClicked

    private void jEditBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEditBookActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jEditBookActionPerformed

    private void jAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddBookActionPerformed
        // TODO add your handling code here:
        //inserarea unei carti in baza de date
        //cum are o relatie de 1 la 1 -> inserarea si in tabela book_details
        String title = jTitle.getText();
        String author = jAuthor.getText();
        String genre = jGenre.getText();
        String number = jNumber.getText();
        //preluare date din interfata grafica
        //creare conexiune 
     if(title.length() > 1 && author.substring(0, 1).matches("[A-Z]") 
             && author.length() >=2 && genre.length() > 4 && number.length() > 0)
     {
         try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            st = con.prepareStatement("insert into  BOOK_DETAILS (book_details_id,Title,"
                + "Author,Genre) values(null,?,?,?)");//pe prima valoare avem auto increment
            st.setString(1, title);//conversie la intreg
            st.setString(2, author);
            st.setString(3,genre);
            st.executeUpdate();
            //acum inseram in book
            //details_id va fi id_ul maxim(ultimul inserat din book_details)
            st = con.prepareStatement("select max(book_details_id) maxi from book_details");
            ResultSet rs = st.executeQuery();
            rs.next();

            String det_id = rs.getString("maxi");//extragerea book_details_id
            //inserarea in tablea books
            st = con.prepareStatement("INSERT into BOOK "
                + "(book_id,number_available,book_details_id) "
                + "values (null,?,?)");
            st.setString(1, number);
            st.setString(2, det_id);
            st.executeUpdate();
            //mesaj
            JOptionPane.showMessageDialog(this, "Recorded");
            //si updatam tabelul
            table_update();
            //
            jTitle.setText("");
            jAuthor.setText("");
            jGenre.setText("");
            jNumber.setText("");//eliberare
            //focusare cursor
            jTitle.requestFocus();
con.close();
        }catch (HeadlessException | ClassNotFoundException | SQLException e){System.out.println(e);}
    }else
    {
        JOptionPane.showMessageDialog(this, "Insertion Failed: Boxes still empty");
    }
    }//GEN-LAST:event_jAddBookActionPerformed

    private void jTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTitleActionPerformed

    private void JClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JClearMouseClicked
        // TODO add your handling code here:
        //trebuie setate pe editabil toate butoanele din tabela si golite
        jTitle.setEditable(true);
        jAuthor.setEditable(true);
        jGenre.setEditable(true);
        jTitle.setText("");
        jAuthor.setText("");
        jGenre.setText("");
        jNumber.setText("");//eliberare
        //focusare cursor
        jTitle.requestFocus();
    }//GEN-LAST:event_JClearMouseClicked

    private void jEditBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jEditBookMouseClicked
        // TODO add your handling code here:
        //editare
        String number = jNumber.getText();
         String title = jTitle.getText();
        String author = jAuthor.getText();//tupla folosita cu uid
        //putem modifica doar numarul
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            st = con.prepareStatement("Select b.book_id\n" +
            "FROM book b, book_details d\n" +
            "WHERE b.book_details_id = d.book_details_id\n" +
            "AND d.title = ?"
            +"AND d.author = ?");
            st.setString(1, title);//conversie la intreg
            st.setString(2, author);
            ResultSet rs = st.executeQuery();
            rs.next();

            String book_id = rs.getString("book_id");//extragerea book_id
            //inserarea in tablea books
            st = con.prepareStatement("UPDATE BOOK SET number_available = ? WHERE book_id = ?");
            st.setString(1, number);
            st.setString(2, book_id);
            st.executeUpdate();
            //mesaj
            JOptionPane.showMessageDialog(this, "Recorded Update");
            //si updatam tabelul
            table_update();
            //
            jTitle.setText("");
            jAuthor.setText("");
            jGenre.setText("");
            jNumber.setText("");//eliberare
            //focusare cursor
            jTitle.requestFocus();
con.close();
        }catch (Exception e){System.out.println(e);}
        
    }//GEN-LAST:event_jEditBookMouseClicked

    private void jDeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteBookActionPerformed
        // TODO add your handling code here:
        //DELETE mai intai din book_details si dupa din book
        String title = jTitle.getText();
        String author = jAuthor.getText();//campuri necesare identificarii
        //creare conexiune
        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the Record?","Warning",JOptionPane.YES_NO_OPTION);
            //confirmare
        if(dialogResult == JOptionPane.YES_OPTION){//dam delete
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            st = con.prepareStatement("Select b.book_id, b.book_details_id\n" +
            "FROM book b, book_details d\n" +
            "WHERE b.book_details_id = d.book_details_id\n" +
            "AND d.title = ?"
            +"AND d.author = ?");//pe prima valoare avem auto increment
            st.setString(1, title);
            st.setString(2, author);//avem id urile inregistrarilor de sters
            ResultSet rs = st.executeQuery();
            rs.next();

            String det_id = rs.getString("book_details_id");//extragerea book_details_id
            String book_id = rs.getString("book_id");//extagere carte
            st = con.prepareStatement("DELETE FROM book "
                    + "WHERE book_id = ?");
            st.setString(1, book_id);
            st.executeUpdate();
            st = con.prepareStatement("DELETE FROM book_details "
                    + "WHERE book_details_id = ?");
            st.setString(1, det_id);
            st.executeUpdate();
            //au fost sterse detaliile
            //mesaj
            JOptionPane.showMessageDialog(this, "Record Deleted");
            //si updatam tabelul
            table_update();
            //
            jTitle.setText("");
            jAuthor.setText("");
            jGenre.setText("");
            jNumber.setText("");//eliberare
            //focusare cursor
            jTitle.requestFocus();con.close();

        }catch (Exception e){System.out.println(e);
        JOptionPane.showMessageDialog(this, "Delete Failed");}}
    }//GEN-LAST:event_jDeleteBookActionPerformed

    private void EditIngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditIngActionPerformed
        // TODO add your handling code here:
        //editare ingredient 
        // TODO add your handling code here:
        //editare
        String nume = JIngredient.getText();//de ajuns pt identificare
        String quantity = JInQuant.getText();
        String exp = JExp.getText();
        if(nume.length() > 1 && Integer. parseInt(quantity) > 0){
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            st = con.prepareStatement("Select Ingredient_id FROM ingredient WHERE nume = ?");
            st.setString(1, nume);
            ResultSet rs = st.executeQuery();
            rs.next();

            String ing_id = rs.getString("ingredient_id");//extragerea ingredient_id
            System.out.print("ceva");
            //update  dupa id 
            st = con.prepareStatement("UPDATE INGREDIENT SET nume = ?, "
                    + "available_quantity = ?, expiration_date = TO_DATE(?,'yyyy-mm-dd') WHERE ingredient_id = ?");
            st.setString(1, nume);
            st.setInt(2, Integer.parseInt(quantity));
            st.setString(3, exp);
            st.setString(4, ing_id);
            st.executeUpdate();
            //mesaj
            JOptionPane.showMessageDialog(this, "Recorded Update");
            //si updatam tabelul
            table_update2();
            //
            jTitle.setText("");
            jAuthor.setText("");
            jGenre.setText("");
            jNumber.setText("");//eliberare
            //focusare cursor
            jTitle.requestFocus();con.close();

        }catch (Exception e){System.out.println(e);
            JOptionPane.showMessageDialog(this, "Update failed: Date "
                    + "MUST be greater than current date and format must be respected");} 
    }//GEN-LAST:event_EditIngActionPerformed
    }
    
    private void JExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JExpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JExpActionPerformed

    private void AddIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddIngredientActionPerformed
        // TODO add your handling code here:
        //Adaugam un ingredient
        //citim varialile
        String nume = JIngredient.getText();
        String quantity = JInQuant.getText();
        String exp = JExp.getText();
        //punem conditiile de inserare fara data pe care o gestionam in exceptii
        if(nume.length() > 1 && Integer. parseInt(quantity) > 0)
        {
            try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            st = con.prepareStatement("insert into INGREDIENT VALUES (null,?,?,TO_DATE(?,'yyyy-mm-dd'))");//pe prima valoare avem auto increment
            st.setString(1, nume);
            int aux = Integer.parseInt(quantity);
            st.setInt(2, aux);
            st.setString(3,exp);
            st.executeUpdate();
            //acum inseram in ingredient
            JOptionPane.showMessageDialog(this, "Recorded");
            //si updatam tabelul
            table_update2();
            //
            jTitle.setText("");
            jAuthor.setText("");
            jGenre.setText("");
            jNumber.setText("");//eliberare
            //focusare cursor
            jTitle.requestFocus();con.close();

        }catch (HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Recording failed: Date "
                    + "MUST be greater than current date and format must be respected");
        }
        }
        
    }//GEN-LAST:event_AddIngredientActionPerformed

    private void IngredientsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngredientsTableMouseClicked
        // TODO add your handling code here:
        //se apasa pe un ingredient
        DefaultTableModel Df = (DefaultTableModel)IngredientsTable.getModel();
        int selectedIndex = IngredientsTable.getSelectedRow();
        JIngredient.setText(Df.getValueAt(selectedIndex, 1).toString());
        JExp.setText(Df.getValueAt(selectedIndex, 3).toString());
        JInQuant.setText(Df.getValueAt(selectedIndex, 2).toString());
    }//GEN-LAST:event_IngredientsTableMouseClicked

    private void DelIngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelIngActionPerformed
        // TODO add your handling code here:
        //delete din tabel aINGREDIENT
        String nume = JIngredient.getText();//pentru identificare
         int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the Record?","Warning",JOptionPane.YES_NO_OPTION);
            //confirmare
        if(dialogResult == JOptionPane.YES_OPTION){//dam delete
            try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            st = con.prepareStatement("DELETE FROM ingredient WHERE nume = ?");
            st.setString(1, nume);
            st.executeUpdate();
            //mesaj
            JOptionPane.showMessageDialog(this, "Recorded Deleted");
            //si updatam tabelul
            table_update2();
            //
            jTitle.setText("");
            jAuthor.setText("");
            jGenre.setText("");
            jNumber.setText("");//eliberare
            //focusare cursor
            jTitle.requestFocus();con.close();

        }catch (Exception e){System.out.println(e);
            JOptionPane.showMessageDialog(this, "Delete failed");} 
        }
        
    }//GEN-LAST:event_DelIngActionPerformed

    private void m44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m44MouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_m44MouseClicked

    private void m44MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m44MousePressed
        // TODO add your handling code here:
        p_book.setBackground(defaultcolor);
        p_inventory.setBackground(defaultcolor);
        p_receipt.setBackground(defaultcolor);
        p_menu.setBackground(clikedcolor);
        m44.setForeground(white);
        m22.setForeground(black);
        m11.setForeground(black);
        m33.setForeground(black);
    }//GEN-LAST:event_m44MousePressed

    private void AddIngToItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddIngToItemActionPerformed
        // TODO add your handling code here:
        //inserare in ITEM_INGREDIENT
        String ingr_name = (String) jComboIngredient.getSelectedItem();//elementul selectat
        String quant = ing_item_quant.getText();//ce cantitate din element
        if( Double. parseDouble(quant) > 0)
        {
            DefaultTableModel Df = (DefaultTableModel)MenuTable.getModel();
            int selectedIndex = MenuTable.getSelectedRow();
            String item_name = (Df.getValueAt(selectedIndex, 1).toString());
            //luam item-ul selectat din tablela
            try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            //interogare Item_id
            st = con.prepareStatement("SELECT item_id FROM ITEM_MENIU WHERE name = ?");
            st.setString(1,item_name);
            ResultSet rs = st.executeQuery();
            rs.next();//va stoca oricum doar un item
            String item_id = rs.getString("item_id");//avem prima val 
            System.out.println("Item id "+ item_id);
            //inerogare ingredient_id
            st = con.prepareStatement("SELECT ingredient_id FROM Ingredient WHERE nume = ?");
            st.setString(1,ingr_name);
            rs = st.executeQuery();
            rs.next();//va stoca oricum doar un item
            String ingr_id = rs.getString("ingredient_id");//avem prima val 
            
            
            st = con.prepareStatement("insert into ITEM_INGREDIENT VALUES (?,?,?)");//pe prima valoare avem auto increment
            st.setString(1, item_id);
            st.setString(2,ingr_id);
            st.setDouble(3,Double.parseDouble(quant));
            st.executeUpdate();
            //acum inseram in ingredient
            JOptionPane.showMessageDialog(this, "Ingredient added");
            //si updatam tabelul
            table_update_ingredient();
            //
            ing_item_quant.setText("");
            //eliberare
            //focusare cursor
            ing_item_quant.requestFocus();con.close();

        }catch (HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Adding ingredient: Failed ");
        }
        }
        
        
    }//GEN-LAST:event_AddIngToItemActionPerformed

    private void RemoveIngFromItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveIngFromItemActionPerformed
        // TODO add your handling code here:
        //dau del la o intregistrare din tabela Item_Ingredient
         if(IngredientTable.getSelectedRow() != -1)
        {
            try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            
            DefaultTableModel Df = (DefaultTableModel)MenuTable.getModel();
            int selectedIndex = MenuTable.getSelectedRow();
            String item_index = (Df.getValueAt(selectedIndex, 0).toString());
            
            Df = (DefaultTableModel)IngredientTable.getModel();
            selectedIndex = IngredientTable.getSelectedRow();
            String ingredient_name = (Df.getValueAt(selectedIndex, 0).toString());//care e unic
            
            st = con.prepareStatement("SELECT ingredient_id from INGREDIENT WHERE nume = ?");
            st.setString(1, ingredient_name);
            ResultSet rs = st.executeQuery();
            rs.next();
            String ingr_id = rs.getString("ingredient_id");
            
            
            
            st = con.prepareStatement("DELETE FROM ITEM_INGREDIENT WHERE item_id = ? AND ingredient_id = ?");//pe prima valoare avem auto increment
            st.setString(1, item_index);
            st.setString(2, ingr_id);
            st.executeUpdate();
           JOptionPane.showMessageDialog(this, "Ingredient Removed");
            table_update_ingredient();
            //
            ing_item_quant.setText("");
            //eliberare
            //focusare cursor
            ing_item_quant.requestFocus();con.close();
        }catch (HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Deleting Ingredient: Failed ");
        }
        }
    }//GEN-LAST:event_RemoveIngFromItemActionPerformed

    private void AddMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMenuItemActionPerformed
        // TODO add your handling code here:
        //adauga in tabela ITEM_MENIU
        String name = ItemName.getText();
        String price = ItemPrice.getText();
        //conexiune
        if(name.length() > 2 && Double.parseDouble(price) > 0)
        {
            try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            
            
            st = con.prepareStatement("insert into ITEM_MENIU VALUES (null,?,?)");//pe prima valoare avem auto increment
            st.setString(1, name);
            st.setString(2,price);
            st.executeUpdate();
            //acum inseram in ingredient
            JOptionPane.showMessageDialog(this, "Item added");
            //si updatam tabelul
            table_update_meniu();
            table_update_ingredient();
            jComboIngredient.setSelectedItem("");
            ing_item_quant.setText("");
            //
            ItemName.setText("");
            ItemPrice.setText("");
            //eliberare
            //focusare cursor
            ing_item_quant.requestFocus();con.close();

        }catch (HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Adding Item Meniu: Failed ");
        }
        }
    }//GEN-LAST:event_AddMenuItemActionPerformed

    private void ing_item_quantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ing_item_quantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ing_item_quantActionPerformed

    private void m44MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m44MouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_m44MouseReleased

    private void DeleteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMenuItemActionPerformed
        // TODO add your handling code here:
        //delete mai intail la item_Ingredient si dupa la item meniu
        //conexiune
        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the Record?","Warning",JOptionPane.YES_NO_OPTION);
            //confirmare
        if(dialogResult == JOptionPane.YES_OPTION){//dam delete
        if(MenuTable.getSelectedRow() != -1)
        {
            try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            
            DefaultTableModel Df = (DefaultTableModel)MenuTable.getModel();
            int selectedIndex = MenuTable.getSelectedRow();
            String item_index = (Df.getValueAt(selectedIndex, 0).toString());
            
            st = con.prepareStatement("DELETE FROM ITEM_INGREDIENT WHERE item_id = ?");//pe prima valoare avem auto increment
            st.setString(1, item_index);
            st.executeUpdate();
            //del la item_ingredient
            st = con.prepareStatement("DELETE FROM ITEM_MENIU WHERE item_id = ?");//pe prima valoare avem auto increment
            st.setString(1, item_index);
            st.executeUpdate();
            //del din meniu
            JOptionPane.showMessageDialog(this, "Item Deleted");
            //si updatam tabelul
            table_update_meniu();
            //
            ItemName.setText("");
            ItemPrice.setText("");
            //eliberare
            //focusare cursor
            ItemName.requestFocus();
            ((DefaultTableModel)IngredientTable.getModel()).setNumRows(0);
con.close();
        }catch (HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Deleting Item Meniu: Failed ");
        }
        //delete la item_receipt
        }
        }
    }//GEN-LAST:event_DeleteMenuItemActionPerformed

    private void EditMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditMenuItemActionPerformed
        // TODO add your handling code here:
        //editarea numelui unui item din meniu sau a pretului
        String name = ItemName.getText();
        String price = ItemPrice.getText();
        //conexiune
        if(name.length() > 2 && Double.parseDouble(price) > 0 && MenuTable.getSelectedRow() != -1)
        {
            try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            
            DefaultTableModel Df = (DefaultTableModel)MenuTable.getModel();
            int selectedIndex = MenuTable.getSelectedRow();
            String item_index = (Df.getValueAt(selectedIndex, 0).toString());
            
            st = con.prepareStatement("UPDATE ITEM_MENIU SET name = ?, price = ?"
                    + " WHERE item_id = ?");//pe prima valoare avem auto increment
            st.setString(1, name);
            st.setDouble(2,Double.parseDouble(price));
            st.setDouble(3,Double.parseDouble(item_index));
            st.executeUpdate();
            //acum inseram in ingredient
            JOptionPane.showMessageDialog(this, "Update: Success");
            //si updatam tabelul
            table_update_meniu();
            //
            ItemName.setText("");
            ItemPrice.setText("");
            //eliberare
            //focusare cursor
            ing_item_quant.requestFocus();con.close();

        }catch (HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Adding Item Meniu: Failed ");
        }
        }
    }//GEN-LAST:event_EditMenuItemActionPerformed

    private void MenuTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuTableMouseClicked
        // TODO add your handling code here:
        //se afiseaza pe cele 2 controale numele si pretul
        DefaultTableModel Df = (DefaultTableModel)MenuTable.getModel();
        int selectedIndex = MenuTable.getSelectedRow();
        ItemName.setText(Df.getValueAt(selectedIndex, 1).toString());
        ItemPrice.setText(Df.getValueAt(selectedIndex, 2).toString());
        table_update_ingredient();//se afiseaza ingredientele selectate
        //se afiseaza ingredientele din tabela ITEM_INGREDIENT
        
    }//GEN-LAST:event_MenuTableMouseClicked

    private void IngredientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngredientTableMouseClicked
        // TODO add your handling code here:
        //setam controlul de selectie si cel de cantitate
        DefaultTableModel Df = (DefaultTableModel)IngredientTable.getModel();
        int selectedIndex = IngredientTable.getSelectedRow();
        jComboIngredient.setSelectedItem(Df.getValueAt(selectedIndex, 0).toString());
        ing_item_quant.setText(Df.getValueAt(selectedIndex, 1).toString());
    }//GEN-LAST:event_IngredientTableMouseClicked

    private void RNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RNoActionPerformed

    private void RDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RDateActionPerformed

    private void MakeNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MakeNewActionPerformed
        // TODO add your handling code here:
        //se retarteaza valorile pe contoarul de numarau si pe tabela
        //setez ca editabil
        AddNewReceipt.setEnabled(true);
        RDate.setEditable(true);
        RBuc.setEditable(true);
        jIMAdd.setEnabled(true);
        //
        RTotal.setText("");
        RNo.setText("");
        RDate.setText("");
        RDate.requestFocus();
        ((DefaultTableModel)RComanda.getModel()).setNumRows(0); //golesc tabela
    }//GEN-LAST:event_MakeNewActionPerformed

    private void jComboItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboItemActionPerformed
        // TODO add your handling code here:
        //
    }//GEN-LAST:event_jComboItemActionPerformed

    private void MarkPayedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarkPayedActionPerformed
        // TODO add your handling code here:
        //dam update la valoarea selectata ca fiind payed si setam si carte eventual
        //conexiune
        if(ReceiptTable.getSelectedRow() != -1)//daca avem ceva selectat
        {
            try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            con.setAutoCommit(false);//are loc si o tranzactie
            
            DefaultTableModel Df = (DefaultTableModel)ReceiptTable.getModel();
            int selectedIndex = ReceiptTable.getSelectedRow();
            String receipt_id = (Df.getValueAt(selectedIndex, 0).toString());
            
            st = con.prepareStatement("UPDATE RECEIPT SET pay_status = 'Paid'"
                    + " WHERE receipt_id = ?");
            st.setDouble(1,Double.parseDouble(receipt_id));
            st.executeUpdate();
            //acum returnat cartea
            String book_id = RBook.getSelectedItem().toString();
            st = con.prepareStatement("UPDATE BOOK \n" +
            "SET NUMBER_AVAILABLE = NUMBER_AVAILABLE + 1\n" +
            "WHERE BOOK_ID = ?");
            st.setDouble(1,Double.parseDouble(book_id));
            st.executeUpdate();
            con.commit();
            JOptionPane.showMessageDialog(this, "Payment made");
            //si updatam tabelul
            table_update_receipts();
            table_update();con.close();
        }catch (HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Payment: Failed ");
        }
        }  
    }//GEN-LAST:event_MarkPayedActionPerformed

    private void RBucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBucActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RBucActionPerformed

    private void jIMAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIMAddActionPerformed
        // TODO add your handling code here:
        //adaugam in tabela doar fara update la baza de date
        
        if(Integer.parseInt(RBuc.getText()) > 0){
        DefaultTableModel Df = (DefaultTableModel)RComanda.getModel();
        int nr = Df.getRowCount();
        Df.setRowCount(nr);
        Vector v2 = new Vector();    
        v2.add(jComboItem.getSelectedItem().toString());
        v2.add(RBuc.getText());
        int line = check_and_fix_distinct(jComboItem.getSelectedItem().toString(),Integer.parseInt(RBuc.getText()));
        //interogare ca sa aflam pretul  unui item si sa-l inmultim cu r_buc
        try{
            
            Class.forName("oracle.jdbc.driver.OracleDriver");
        String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
        String user = "bd085";
        String password = "bd085";
        con = DriverManager.getConnection(url, user, password);
        st = con.prepareStatement("SELECT  ? * i.PRICE AS PRICE\n" +
"    FROM ITEM_MENIU i"+
"    WHERE i.NAME = ?");
        st.setDouble(1, Double.parseDouble(RBuc.getText()));
        st.setString(2, jComboItem.getSelectedItem().toString());
        ResultSet rs = st.executeQuery();
        rs.next();
        v2.add(rs.getString("PRICE"));con.close();
}catch (Exception e){System.out.println(e);}
        //
        if(line == -1){Df.addRow(v2);}
        else{
            //pt modify doar:
            row_quant_edit.put(line,Integer.parseInt(RBuc.getText()));//am adaugat linia editata
            Df.setValueAt((Integer.parseInt(Df.getValueAt(line, 2).toString()) + Integer.parseInt(v2.get(2).toString())), line, 2);}//modificare pret toatal
        }
    }//GEN-LAST:event_jIMAddActionPerformed

    private void ReceiptTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReceiptTableMouseClicked
        // TODO add your handling code here:
        AddNewReceipt.setEnabled(false);
        DefaultTableModel Df = (DefaultTableModel)ReceiptTable.getModel();
        int selectedIndex = ReceiptTable.getSelectedRow();
        RNo.setText(Df.getValueAt(selectedIndex, 0).toString());
        RDate.setText(Df.getValueAt(selectedIndex, 1).toString());
        RTotal.setText(Df.getValueAt(selectedIndex, 2).toString());
        RBook.setEditable(false);
        RDate.setEditable(false);
        jIMAdd.setEnabled(false);
        RBuc.setEditable(false);//setam pe false
        //avem nevoie si de id ul cartii
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            
            
            st = con.prepareStatement("SELECT book_id  FROM book_borrow WHERE receipt_id = ?");
            st.setDouble(1,Double.parseDouble(RNo.getText()));
            ResultSet rs = st.executeQuery();
            rs.next();
            //RBook.setText(rs.getString("book_id"));
            RBook.setSelectedItem(rs.getString("book_id"));
            table_update_comanda();con.close();

        }catch (HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println(e);
        }
        
        
    }//GEN-LAST:event_ReceiptTableMouseClicked

    private void AddNewReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewReceiptActionPerformed
        // TODO add your handling code here:
        //aici validam datele introduse si inseram in BOOK_BORROW ITEM_RECEIPT si RECEIPT
        String date = RDate.getText();
        String book_id = RBook.getSelectedItem().toString();
        DefaultTableModel Df = (DefaultTableModel)RComanda.getModel();
        int nr = Df.getRowCount();
        //INSERT RECEIPT
        //conexiune
        if(date.length() > 0 && book_id.length() > 0 && nr > 0)//validari minimale
        {
            try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            con.setAutoCommit(false);//avem tranzactii
            
            st = con.prepareStatement("INSERT INTO RECEIPT "
                    + "(receipt_id, receipt_date, Pay_Status)"
                    + " VALUES (null,TO_DATE(?,'yyyy-mm-dd'),'Unpaid')");//pe prima valoare avem auto increment
            st.setString(1, date);
            st.executeUpdate();
            System.out.println("a ajuns la try");
            //interogam ultimul receip_id
            st = con.prepareStatement("SELECT max(receipt_id) mx FROM receipt");
            ResultSet rs = st.executeQuery();
            rs.next();
            
            //acum inseram in Book_Borrow
                        st = con.prepareStatement("INSERT INTO BOOK_BORROW"
                    + "(receipt_id, book_id)"
                    + " VALUES (?,?)"
                    );//pe prima valoare avem auto increment
            st.setDouble(1, Double.parseDouble(rs.getString("mx")));
            st.setDouble(2,Double.parseDouble(book_id));
            st.executeUpdate();
            //acum dam update la numarul de carti dispnibile
            st = con.prepareStatement("UPDATE BOOK \n" +
            "SET NUMBER_AVAILABLE = NUMBER_AVAILABLE - 1\n" +
            "WHERE BOOK_ID = ?");
            st.setDouble(1,Double.parseDouble(book_id));
            st.executeUpdate();
            //table_update();
            
            //acum inseram in Item_Receipt
            int cols = Df.getColumnCount();
            int rows = nr;
            for(int r = 0; r < rows; r++)//numarul de inserari in ITEM_MENIU
            {
                st = con.prepareStatement("SELECT  item_id\n" +
                "    FROM ITEM_MENIU i"+
                "    WHERE i.NAME = ?");
                st.setString(1, (String) Df.getValueAt(r, 0));//sub Item
                System.out.println((String) Df.getValueAt(r, 0));
                ResultSet rs1 = st.executeQuery();
                rs1.next();
                st = con.prepareStatement("INSERT INTO item_receipt (item_id,receipt_id,quantity)"
                        + " VALUES (?,?,?)");
                System.out.println( (rs1.getString("item_id" )));
                System.out.println( rs.getString("mx"));
                st.setInt(1, (int) Double.parseDouble(rs1.getString("item_id" )));
                st.setInt(2, (int) Double.parseDouble(rs.getString("mx")));
                st.setInt(3, (int) Double.parseDouble((String)Df.getValueAt(r, 1)));//numarul de bucati
                st.executeUpdate();
                //avem in item receipt
                //trebuie sa dam update la inventar
                st = con.prepareStatement("SELECT  ing.NUME , ? * i.INGREDIENT_QUANTITY quan\n" +
"    FROM INGREDIENT ing, ITEM_MENIU im, ITEM_INGREDIENT i\n" +
"    WHERE ing.INGREDIENT_ID = i.INGREDIENT_ID AND im.ITEM_ID = i.ITEM_ID AND im.item_id = ?");
                st.setInt(1, (int) Double.parseDouble((String) Df.getValueAt(r, 1)));//numarul de bucati
                st.setInt(2, (int) Double.parseDouble(rs1.getString("item_id" )));
                ResultSet rs2 = st.executeQuery();//avem nume ... ing_quan pt fiecare item din meiu
                //iteram si scadem din ingredient
                ResultSetMetaData Rss = rs2.getMetaData();
                int c = Rss.getColumnCount();
                while(rs2.next())
                {
                    for(int i = 1;i < c;i++)
                    {
                        //statement de update
                        st = con.prepareStatement("UPDATE INGREDIENT SET available_quantity = "
                                + "available_quantity - ? "
                                + "WHERE nume = ? ");
                        System.out.println("cantitate de scazutt: "+rs2.getString("quan"));
                        st.setString(2,rs2.getString("Nume"));
                        st.setDouble(1,Double.parseDouble(rs2.getString("quan")));
                        st.executeUpdate();
                        //decrement cantitate
                    }
                }}
            //acum scadem din ingredient cumva
            
            con.commit();//daca nu iese din try pana aici atunci incheie tranzactia 
            JOptionPane.showMessageDialog(this, "Receipt Made");
            
            table_update_receipts();
            table_update();
            table_update2();
            
            con.close();
        }catch (HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Adding Receipt Failed");
        }
        }
        
    }//GEN-LAST:event_AddNewReceiptActionPerformed

    private void EditReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditReceiptActionPerformed
        // TODO add your handling code here:
        //validam butonul de add
        //trebuie verificat daca este paid
        int row = ReceiptTable.getSelectedRow();
        String pay_status = ReceiptTable.getValueAt(row,3).toString();//extrag val
        if(pay_status.equals("Unpaid")){//putem modifica factura doar daca nu e platita
        jIMAdd.setEnabled(true);//pentru a putea adauga
        RBuc.setEditable(true);//pt a putea introduce nr de buc
        table_update_comanda();
        items_before_edit = RComanda.getRowCount();//numarul de linii din tabela
        //pt a tine minte de unde introducem la apasarea butonului modify  
        row_quant_edit.clear();//curatam tabela
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Paid Receipt can NOT be edited");
        }
    }//GEN-LAST:event_EditReceiptActionPerformed

    private void ModifyReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyReceiptActionPerformed
        // TODO add your handling code here:
        // trebuie parcursa tablela cu comanda si introduce valorile de la randul salvat la apasarea edit
        // TODO add your handling code here:
        //aici validam datele introduse si inseram in BOOK_BORROW ITEM_RECEIPT si RECEIPT
        String date = RDate.getText();
        String book_id = RBook.getSelectedItem().toString();
        DefaultTableModel Df = (DefaultTableModel)RComanda.getModel();
        int nr = Df.getRowCount();
        //conexiune
            try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            con = DriverManager.getConnection(url, user, password);
            con.setAutoCommit(false);//avem tranzactii
            //trebuie sa inseram in item-receipt
            //aflam item_id
            int r_id = Integer.parseInt(RNo.getText());
            
            
            
            //acum inseram in Item_Receipt
            int cols = Df.getColumnCount();
            int rows = nr;
            //
            Enumeration<Integer> e = row_quant_edit.keys();
            while (e.hasMoreElements())
            {
                //parcurgem elementele modificate
                //cu linia trebuie sa aflam id-ul
                int line = e.nextElement();
                st = con.prepareStatement("SELECT  item_id\n" +
                "    FROM ITEM_MENIU i"+
                "    WHERE i.NAME = ?");
                st.setString(1, (String) Df.getValueAt(line, 0));//sub Item
                ResultSet rs1 = st.executeQuery();
                rs1.next();
                //
                st = con.prepareStatement("UPDATE item_receipt SET quantity = quantity + ?"
                            + " WHERE item_id = ? AND receipt_id = ?"
                       );
                st.setInt(2, (int) Double.parseDouble(rs1.getString("item_id" )));
                st.setInt(3, r_id);
                st.setInt(1, row_quant_edit.get(line));//numarul de bucati
                st.executeUpdate();
                //si scaderea din ingreiente
                
                st = con.prepareStatement("SELECT  ing.NUME , ? * i.INGREDIENT_QUANTITY quan\n" +
"    FROM INGREDIENT ing, ITEM_MENIU im, ITEM_INGREDIENT i\n" +
"    WHERE ing.INGREDIENT_ID = i.INGREDIENT_ID AND im.ITEM_ID = i.ITEM_ID AND im.item_id = ?");
                st.setInt(1, row_quant_edit.get(line));//numarul de bucati adaugate
                st.setInt(2, (int) Double.parseDouble(rs1.getString("item_id" )));
                ResultSet rs2 = st.executeQuery();//avem nume ... ing_quan pt fiecare item din meiu
                //iteram si scadem din ingredient
                ResultSetMetaData Rss = rs2.getMetaData();
                int c = Rss.getColumnCount();
                while(rs2.next())
                {
                    for(int i = 1;i < c;i++)
                    {
                        //statement de update
                        st = con.prepareStatement("UPDATE INGREDIENT SET available_quantity = "
                                + "available_quantity - ? "
                                + "WHERE nume = ? ");
                        System.out.println("cantitate de scazut: "+rs2.getString("quan"));
                        st.setString(2,rs2.getString("Nume"));
                        st.setDouble(1,Double.parseDouble(rs2.getString("quan")));
                        st.executeUpdate();
                        //decrement cantitate
                    }
                }
                //
            }
            
           
            for(int r = items_before_edit; r < rows; r++)//numarul de inserari in ITEM_MENIU
            {//incepe de l prima adaugata
                int line_find = check_and_fix_distinct((String) Df.getValueAt(r, 0),(int) Double.parseDouble((String) Df.getValueAt(r, 1)));
                
                st = con.prepareStatement("SELECT  item_id\n" +
                "    FROM ITEM_MENIU i"+
                "    WHERE i.NAME = ?");
                st.setString(1, (String) Df.getValueAt(r, 0));//sub Item
                System.out.println((String) Df.getValueAt(r, 0));
                ResultSet rs1 = st.executeQuery();
                rs1.next();
               
                st = con.prepareStatement("INSERT INTO item_receipt (item_id,receipt_id,quantity)"
                        + " VALUES (?,?,?)");
                st.setInt(1, (int) Double.parseDouble(rs1.getString("item_id" )));
                st.setInt(2, r_id);
                st.setInt(3, (int) Double.parseDouble((String) Df.getValueAt(r, 1)));//numarul de bucati
                st.executeUpdate();
                
                
                //avem in item receipt
                //trebuie sa dam update la inventar
                st = con.prepareStatement("SELECT  ing.NUME , ? * i.INGREDIENT_QUANTITY quan\n" +
"    FROM INGREDIENT ing, ITEM_MENIU im, ITEM_INGREDIENT i\n" +
"    WHERE ing.INGREDIENT_ID = i.INGREDIENT_ID AND im.ITEM_ID = i.ITEM_ID AND im.item_id = ?");
                st.setInt(1, (int) Double.parseDouble((String) Df.getValueAt(r, 1)));//numarul de bucati
                st.setInt(2, (int) Double.parseDouble(rs1.getString("item_id" )));
                ResultSet rs2 = st.executeQuery();//avem nume ... ing_quan pt fiecare item din meiu
                //iteram si scadem din ingredient
                ResultSetMetaData Rss = rs2.getMetaData();
                int c = Rss.getColumnCount();
                while(rs2.next())
                {
                    for(int i = 1;i < c;i++)
                    {
                        //statement de update
                        st = con.prepareStatement("UPDATE INGREDIENT SET available_quantity = "
                                + "available_quantity - ? "
                                + "WHERE nume = ? ");
                        System.out.println("cantitate de scazuyt: "+rs2.getString("quan"));
                        st.setString(2,rs2.getString("Nume"));
                        st.setDouble(1,Double.parseDouble(rs2.getString("quan")));
                        st.executeUpdate();
                        //decrement cantitate
                    }
                }
            }
            //acum scadem din ingredient
            
            con.commit();//daca nu iese din try pana aici atunci incheie tranzactia 
            JOptionPane.showMessageDialog(this, "Items added");
            
            table_update_receipts();
            table_update();
            table_update2();
            RTotal.setText("");
            RNo.setText("");
            RDate.setText("");
            //RBook.setText("");
            RDate.requestFocus();
            ((DefaultTableModel)RComanda.getModel()).setNumRows(0); //golesc tabela
            con.close();
        }catch (HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Adding Items Failed");
        }
        
    }//GEN-LAST:event_ModifyReceiptActionPerformed

    private void Total_booksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Total_booksActionPerformed
        // TODO add your handling code here:
        //
        int i = 0;
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
            String user = "bd085";
            String password = "bd085";
            
            con = DriverManager.getConnection(url, user, password);
            DefaultTableModel Df = (DefaultTableModel)BooksTable.getModel();
            int selectedIndex = BooksTable.getSelectedRow();
            int book_id;
            i = Integer.parseInt(jNumber.getText());
            book_id = Integer.parseInt((Df.getValueAt(selectedIndex, 0).toString()));
            st = con.prepareStatement("SELECT b.book_id, count(*) nr\n" +
"FROM BOOK b, RECEIPT r, BOOK_BORROW bo\n" +
"    WHERE (b.BOOK_ID = bo.BOOK_ID  AND r.RECEIPT_ID = bo.RECEIPT_id AND r.PAY_STATUS = 'Unpaid')\n" +
"   AND b.book_id = ?"
                    + " GROUP BY b.book_id");//pe prima valoare avem auto increment
            st.setInt(1, book_id);//conversie la intreg
            ResultSet rs = st.executeQuery();
            if(rs.next())
            {
                i = i + Integer.parseInt(rs.getString("nr"));
            }
        }catch (HeadlessException | ClassNotFoundException | SQLException e){System.out.println(e);}
        JOptionPane.showMessageDialog(this,i,"Total number is:",JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_Total_booksActionPerformed

    private void jNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNumberActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
           Connection con;
    try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
        String url = "jdbc:oracle:thin:@//bd-dc.cs.tuiasi.ro:1539/orcl";
        String user = "bd085";
        String password = "bd085";
        con = DriverManager.getConnection(url, user, password);
  
        
        java.sql.Statement stmt = con.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM employees");
        while(rs.next()){
            String last = rs.getString("LAST_NAME");
            System.out.println(last + "\n");
        }
     
}catch (Exception e){System.out.println(e);}
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddIngToItem;
    private javax.swing.JButton AddIngredient;
    private javax.swing.JButton AddMenuItem;
    private javax.swing.JButton AddNewReceipt;
    private javax.swing.JPanel BookRegister;
    private javax.swing.JTable BooksTable;
    private javax.swing.JButton DelIng;
    private javax.swing.JButton DeleteMenuItem;
    private javax.swing.JButton EditIng;
    private javax.swing.JButton EditMenuItem;
    private javax.swing.JButton EditReceipt;
    private javax.swing.JTable IngredientTable;
    private javax.swing.JTable IngredientsTable;
    private javax.swing.JTextField ItemName;
    private javax.swing.JTextField ItemPrice;
    private javax.swing.JPanel JBooks;
    private javax.swing.JButton JClear;
    private javax.swing.JTextField JExp;
    private javax.swing.JTextField JInQuant;
    private javax.swing.JTextField JIngredient;
    private javax.swing.JPanel JIngredients;
    private javax.swing.JPanel JMenu;
    private javax.swing.JPanel JReceipt;
    private javax.swing.JButton MakeNew;
    private javax.swing.JButton MarkPayed;
    private javax.swing.JTable MenuTable;
    private javax.swing.JButton ModifyReceipt;
    private javax.swing.JComboBox<String> RBook;
    private javax.swing.JTextField RBuc;
    private javax.swing.JTable RComanda;
    private javax.swing.JTextField RDate;
    private javax.swing.JTextField RNo;
    private javax.swing.JTextField RTotal;
    private javax.swing.JTable ReceiptTable;
    private javax.swing.JButton RemoveIngFromItem;
    private javax.swing.JButton Total_books;
    private javax.swing.JTextField ing_item_quant;
    private javax.swing.JButton jAddBook;
    private javax.swing.JTextField jAuthor;
    private javax.swing.JComboBox<String> jComboIngredient;
    private javax.swing.JComboBox<String> jComboItem;
    private javax.swing.JButton jDeleteBook;
    private javax.swing.JButton jEditBook;
    private javax.swing.JTextField jGenre;
    private javax.swing.JButton jIMAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jNumber;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTitle;
    private javax.swing.JLabel m11;
    private javax.swing.JLabel m22;
    private javax.swing.JLabel m33;
    private javax.swing.JLabel m44;
    private javax.swing.JPanel p_book;
    private javax.swing.JPanel p_inventory;
    private javax.swing.JPanel p_menu;
    private javax.swing.JPanel p_receipt;
    // End of variables declaration//GEN-END:variables

  
     }
 
